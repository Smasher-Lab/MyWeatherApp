<!DOCTYPE html>
<html>
<head>
  <title>Weather App</title>
  <link rel="stylesheet" href="/style.css">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Comic+Relief:wght@400;700&display=swap" rel="stylesheet">
  <style>
    nav ul {
      list-style: none;
      display: flex;
      gap: 20px;
    }
    nav ul li {
      position: relative;
    }
    nav ul li ul.dropdown-content {
      display: none;
      position: absolute;
      top: 100%;
      left: 0;
      background-color: white;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 8px;
      z-index: 999;
    }
    nav ul li:hover ul.dropdown-content {
      display: block;
    }
  </style>
</head>
<body id="weather-body">
  <header>
    <p id="app-title">Lalith's Weather App</p>
    <nav>
      <ul>
        <li><a href="/">Home</a></li>
        <li class="dropdown"> 
          <a href="#">Favorites ▼</a>
          <ul class="dropdown-content" id="nav-favorites-list"></ul>
        </li>
        <li><a href="/about">About</a></li>
        <li><a href="/contact">Contact</a></li>
      </ul>
    </nav>
    <button onclick="toggleMode()" id="mode-toggle">🌙 Dark</button>
  </header>

  <main>
    <h1 class="weather-title">Weather 🌤️</h1>
    <h2 class="weather-subtitle">Search for a city</h2>

    <ul id="favorites-list"></ul>

    <form method="GET" action="/">
      <input type="text" name="city" placeholder="Enter city" />
      <button type="submit">Search</button>
    </form>
    <button onclick="getLocation()">📍 Use Current Location</button>

  <div class="weather-info" >
    <% if (weather) { %>
      <h2><%= weather.name %></h2>
      <button onclick="saveCity('<%= weather.name %>')">⭐ Save to Favorites</button>
      <p>Temperature: 🌡️ <%= weather.main.temp %>°C</p>
      <p>Condition: <%= weather.weather[0].description %></p>
    <% } else if (error) { %>
      <p><%= error %></p>
    <% } %>
  </div>
    <% if (forecast) { %>
      <h3 class="forecast-title">5-period Forecast</h3>
      <div class="forecast-container">
        <% forecast.forEach(day => { %>
          <div class="forecast-card">
            <p><%= new Date(day.dt_txt).toLocaleString() %></p>
            <p><%= day.main.temp %>°C</p>
            <p><%= day.weather[0].description %></p>
            <% if (weathertype) { %>
              <% const type = weathertype.toLowerCase(); %>
              <% if (type === 'clear') { %><p>☀️ Clear Sky</p>
              <% } else if (type === 'clouds') { %><p>☁️ Cloudy</p>
              <% } else if (type === 'rain') { %><p>🌧️ Rainy</p>
              <% } else if (type === 'thunderstorm') { %><p>⛈️ Thunderstorm</p>
              <% } else if (type === 'snow') { %><p>❄️ Snowy</p>
              <% } else { %><p>🌈 Unknown Weather</p><% } %>
            <% } %>
          </div>
        <% }) %>
      </div>
    <% } %>

  </main>

  <footer >
    <p>Made in INDIA , By <strong>Lalith</strong></p>
    <p>&copy; 2025 Lalith</p>
    <p><a href="https://github.com/Smasher-Lab/MyWeatherApp" target="_blank">View on GitHub</a></p>
  </footer>

  <script>
    function getLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function (position) {
          const lat = position.coords.latitude;
          const lon = position.coords.longitude;
          window.location.href = `/weather?lat=${lat}&lon=${lon}`;
        }, function (error) {
          alert('Error getting location: ' + error.message);
        });
      } else {
        alert('Geolocation not supported.');
      }
    }

    const weatherType = "<%= weather ? weather.weather[0].main : '' %>";
    const body = document.getElementById("weather-body");

    if (weatherType) {
      switch (weatherType.toLowerCase()) {
        case 'clear': body.style.backgroundImage = "url('/clearskybg.webp')"; break;
        case 'clouds': body.style.backgroundImage = "url('/rainybg.jpg')"; break;
        case 'rain':
        case 'drizzle': body.style.backgroundImage = "url('/rainybg.jpg')"; break;
        case 'thunderstorm': body.style.backgroundImage = "url('/thunderstorm.jpg')"; break;
        case 'snow': body.style.backgroundImage = "url('/snow.avif')"; break;
        default: body.style.background = "#f0f0f0";
      }
    }

    function toggleMode() {
      const body = document.body;
      const btn = document.getElementById('mode-toggle');
      const isDark = body.classList.toggle('dark-mode');
      body.classList.toggle('light-mode', !isDark);
      btn.textContent = isDark ? '☀️ Light Mode' : '🌙 Dark Mode';
      localStorage.setItem('mode', isDark ? 'dark' : 'light');
    }

    function saveCity(city) {
      let favorites = JSON.parse(localStorage.getItem('favorites')) || [];
      if (!favorites.includes(city)) {
        favorites.push(city);
        localStorage.setItem('favorites', JSON.stringify(favorites));
        renderFavorites();
      }
    }



    function renderFavorites() {
      const list = document.getElementById('favorites-list');
      const navList = document.getElementById('nav-favorites-list');
      const favorites = JSON.parse(localStorage.getItem('favorites')) || [];

      list.innerHTML = '';
      navList.innerHTML = '';

      favorites.forEach(city => {
        const li1 = document.createElement('li');
        const a1 = document.createElement('a');
        a1.href = `/?city=${city}`;
        a1.textContent = city;
        li1.appendChild(a1);
        li1.appendChild(removeBtn);
        list.appendChild(li1);

        const li2 = document.createElement('li');
        const a2 = document.createElement('a');
        a2.href = `/?city=${city}`;
        a2.textContent = city;
        li2.appendChild(a2);
        navList.appendChild(li2);
      });
    }

    document.addEventListener('DOMContentLoaded', () => {
      const mode = localStorage.getItem('mode') || 'light';
      document.body.classList.add(mode + '-mode');
      document.getElementById('mode-toggle').textContent =
        mode === 'dark' ? '☀️ Light Mode' : '🌙 Dark Mode';
      renderFavorites();
    });
  </script>
</body>
</html>
